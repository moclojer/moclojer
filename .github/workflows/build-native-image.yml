name: GraalVM Native Images

on: [workflow_dispatch]

jobs:
  build-native:
    runs-on: "${{ matrix.os }}"
    name: "Build native image on ${{ matrix.os }}"
    strategy:
      matrix:
        os: ["macos-11", "ubuntu-20.04"]
    steps:
      - uses: "actions/checkout@v4"
      - uses: "DeLaGuardo/setup-clojure@13.1"
        with:
          cli: "1.11.1.1139"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: "clojure -M:dev --report stderr -m com.moclojer.build --uberjar"
        env:
          CI_COMMIT_SHA: "${{ github.sha }}"
      - uses: "graalvm/setup-graalvm@v1"
        with:
          version: "22.3.2"
          java-version: "17"
          distribution: "graalvm"
          components: "native-image"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Gen reflect.config.json to ${{ runner.os }}
        working-directory: target
        run: |
          echo [] > moclojer.yml
          java -agentlib:native-image-agent=caller-filter-file=filter.json,config-output-dir=. -jar moclojer.jar & PID=$!
          ## Wait startup
          while ! curl -s localhost:8000 -o /dev/null; do echo waiting; sleep 3; done
          curl -s localhost:8000 -D -
          kill $PID
      - name: GraalVM native image build moclojer binary to ${{ runner.os }}
        working-directory: target
        run: |
          native-image @native-image-args \
            -jar moclojer.jar \
            -cp ./classes:moclojer.jar \
            --class-path ./classes:moclojer.jar \
            -classpath ./classes:moclojer.jar \
            -o moclojer_${{ runner.os }} \
            -H:Name=moclojer_${{ runner.os }}
      - name: "Check http status"
        working-directory: target
        run: |
          echo [] > moclojer.yml
          chmod +x ./moclojer_${{ runner.os }}
          ./moclojer_${{ runner.os }} -c moclojer.yml &
          PID=$!
          sleep 5
          curl -vvv -s -D - localhost:8000
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" localhost:8000)
          kill $PID
          if [ "x$STATUS" = "x200" ]; then
            exit 0
          else
            exit 1
          fi
      # save binary generated for OS (by native image) in artifact
      # used in release
      - uses: "actions/upload-artifact@v4.6.0"
        with:
          name: moclojer_bin_${{ runner.os }}
          path: target/native/moclojer_${{ runner.os }}
